Test case 1: enemy ships found
Input: currentPlayer: radarSweep = 1 .
       opposingPlayer: grid[GRID_SIZE][GRID_SIZE] has a ship at [2][4] = 'X'.
       input: Row = 2, Column = 3 (radar sweep starting covering B3, C3, B4, C4)
Expected output: 
"enemy ships found"
radarSweep of the currentPlayer is incremented
returns value of SHIPSFOUND
Description: checks if the function detect a ship in the 2x2 area

Test case 2: no enemy ships found
Input: currentPlayer: radarSweep = 1 
       opposingPlayer: grid[GRID_SIZE][GRID_SIZE] has no ships in the scanned area.
       input: Row = 3, Column = 5 (radar sweep starting covering C6, D6, C7, D7).
Expected output:
"No enemy ships found"
radarSweep of the currentPlayer is incremented 
return value of SHIPSNOTFOUND
Description: checks if the function handles the case where no ships are found

Test case 3: Invalid Coordinates
Input: currentPlayer: radarSweep = 1 
       opposingPlayer: grid[GRID_SIZE][GRID_SIZE] has ships.
       input: Row = 11, Column = 11
Expected output:
"Invalid coordinates"
return value "ILLEGALMOVE"
Description: checks if the function handles invalid coordinates and dont increment radarSweep

Test case 4: no radar sweep remaining
Input: currentPlayer: radarSweep = 3
       opposingPlayer: grid[GRID_SIZE][GRID_SIZE] has a ship at [2][4] = 'X'.
       input: Row = 2, Column = 3 (radar sweep starting covering B3, C3, B4, C4)
Expected output: 
"No radar sweeps remaining"
return "ILLEGALMOVE"
Description: checks if the function prevents the player from performing more than 3 radarSweep

Test case 5: using radar sweep with smoke screen (hit)
Input: currentPlayer: radarSweep = 1 .
       opposingPlayer: grid[GRID_SIZE][GRID_SIZE] has a ship at [2][4] = 'X', smoke screen at [2][4]
       input: Row = 2, Column = 3 (radar sweep starting covering B3, C3, B4, C4)
Expected output:  
"No enemy ships found"
return SHIPSNOTFOUND
increment radar sweep of the currentPlayer
Description: check if the function indentifies a ship hidden by a smoke screen
